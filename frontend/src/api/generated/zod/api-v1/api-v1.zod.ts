/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * OpenAPI
 * wakabata API
 * OpenAPI spec version: 0.0.1
 */
import {
  z as zod
} from 'zod'

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*AuthHandler).Login`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary login
 */
export const pOSTApiV1AuthLoginBody = zod.object({
  "email": zod.string(),
  "password": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*AuthHandler).RefreshToken`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary refresh token
 */
export const pOSTApiV1AuthRefreshBody = zod.object({
  "refresh_token": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).CreateProject`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary create project
 */
export const pOSTApiV1ProjectsBody = zod.object({
  "description": zod.string().optional(),
  "name": zod.string().optional(),
  "user_id": zod.string().optional()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).DeleteProject`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary delete project
 */
export const dELETEApiV1ProjectsIdParams = zod.object({
  "id": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).GetProject`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary get project
 */
export const gETApiV1ProjectsIdParams = zod.object({
  "id": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).UpdateProject`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary update project
 */
export const pUTApiV1ProjectsIdParams = zod.object({
  "id": zod.string()
})

export const pUTApiV1ProjectsIdBody = zod.object({
  "description": zod.string().optional(),
  "name": zod.string().optional(),
  "user_id": zod.string().optional()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).CreateTask`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary create task
 */
export const pOSTApiV1TasksBody = zod.object({
  "description": zod.string().optional(),
  "due_date": zod.string().datetime().nullish(),
  "name": zod.string(),
  "priority": zod.number().nullish(),
  "project_id": zod.string().optional()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).DeleteTask`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary delete task
 */
export const dELETEApiV1TasksIdParams = zod.object({
  "id": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).GetTask`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary get task
 */
export const gETApiV1TasksIdParams = zod.object({
  "id": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).UpdateTask`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary update task
 */
export const pUTApiV1TasksIdParams = zod.object({
  "id": zod.string()
})

export const pUTApiV1TasksIdBody = zod.object({
  "description": zod.string().optional(),
  "due_date": zod.string().datetime().nullish(),
  "name": zod.string(),
  "priority": zod.number().nullish(),
  "project_id": zod.string().optional(),
  "status": zod.boolean().nullish()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).CreateUser`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary create user
 */
export const pOSTApiV1UsersBody = zod.object({
  "email": zod.string(),
  "password": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).GetUser`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary get user
 */
export const gETApiV1UsersIdParams = zod.object({
  "id": zod.string()
})

/**
 * #### Controller: 

`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).UpdateUser`

#### Middlewares:

- `github.com/go-fuego/fuego.defaultLogger.middleware`

---


 * @summary update user
 */
export const pUTApiV1UsersIdParams = zod.object({
  "id": zod.string()
})

export const pUTApiV1UsersIdBody = zod.object({
  "created_at": zod.string().datetime().nullish(),
  "email": zod.string().optional(),
  "id": zod.string().optional(),
  "is_email_verified": zod.boolean().nullish(),
  "password_hash": zod.string().optional(),
  "totp_secret": zod.string().optional(),
  "updated_at": zod.string().datetime().nullish()
})

