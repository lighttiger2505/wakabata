{
	"components": {
		"schemas": {
			"HTTPError": {
				"description": "HTTPError schema",
				"properties": {
					"detail": {
						"description": "Human readable error message",
						"nullable": true,
						"type": "string"
					},
					"errors": {
						"items": {
							"properties": {
								"more": {
									"additionalProperties": {},
									"type": "object"
								},
								"name": {
									"type": "string"
								},
								"reason": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"nullable": true,
						"type": "array"
					},
					"instance": {
						"nullable": true,
						"type": "string"
					},
					"status": {
						"description": "HTTP status code",
						"example": 403,
						"nullable": true,
						"type": "integer"
					},
					"title": {
						"description": "Short title of the error",
						"nullable": true,
						"type": "string"
					},
					"type": {
						"description": "URL of the error type. Can be used to lookup the error in a documentation",
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"LoginRequest": {
				"description": "LoginRequest schema",
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object"
			},
			"Project": {
				"description": "Project schema",
				"properties": {
					"created_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"updated_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"user_id": {
						"description": "string schema",
						"type": "string"
					}
				},
				"type": "object"
			},
			"ProjectToCreate": {
				"description": "ProjectToCreate schema",
				"properties": {
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"user_id": {
						"description": "string schema",
						"type": "string"
					}
				},
				"type": "object"
			},
			"ProjectToUpdate": {
				"description": "ProjectToUpdate schema",
				"properties": {
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"user_id": {
						"description": "string schema",
						"type": "string"
					}
				},
				"type": "object"
			},
			"RefreshTokenRequest": {
				"description": "RefreshTokenRequest schema",
				"properties": {
					"refresh_token": {
						"type": "string"
					}
				},
				"required": [
					"refresh_token"
				],
				"type": "object"
			},
			"Task": {
				"description": "Task schema",
				"properties": {
					"created_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"due_date": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"priority": {
						"format": "int32",
						"nullable": true,
						"type": "integer"
					},
					"project_id": {
						"description": "string schema",
						"type": "string"
					},
					"project_name": {
						"description": "string schema",
						"type": "string"
					},
					"status": {
						"nullable": true,
						"type": "boolean"
					},
					"updated_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"TaskToCreate": {
				"description": "TaskToCreate schema",
				"properties": {
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"due_date": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"priority": {
						"format": "int32",
						"nullable": true,
						"type": "integer"
					},
					"project_id": {
						"description": "string schema",
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object"
			},
			"TaskToUpdate": {
				"description": "TaskToUpdate schema",
				"properties": {
					"description": {
						"description": "string schema",
						"type": "string"
					},
					"due_date": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"priority": {
						"format": "int32",
						"nullable": true,
						"type": "integer"
					},
					"project_id": {
						"description": "string schema",
						"type": "string"
					},
					"status": {
						"nullable": true,
						"type": "boolean"
					}
				},
				"required": [
					"name"
				],
				"type": "object"
			},
			"TokenPair": {
				"description": "TokenPair schema",
				"properties": {
					"access_token": {
						"type": "string"
					},
					"refresh_token": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"User": {
				"description": "User schema",
				"properties": {
					"created_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"is_email_verified": {
						"nullable": true,
						"type": "boolean"
					},
					"password_hash": {
						"description": "string schema",
						"type": "string"
					},
					"totp_secret": {
						"description": "string schema",
						"type": "string"
					},
					"updated_at": {
						"format": "date-time",
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"UserToCreate": {
				"description": "UserToCreate schema",
				"properties": {
					"email": {
						"type": "string"
					},
					"password_hash": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password_hash"
				],
				"type": "object"
			},
			"string": {
				"description": "string schema",
				"type": "string"
			},
			"unknown-interface": {
				"description": "unknown-interface schema"
			}
		}
	},
	"info": {
		"description": "wakabata API",
		"title": "OpenAPI",
		"version": "0.0.1"
	},
	"openapi": "3.1.0",
	"paths": {
		"/api/v1/auth/login": {
			"post": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*AuthHandler).Login`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/api/v1/auth/login",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					},
					"description": "Request body for *app.LoginRequest",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenPair"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/TokenPair"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "login",
				"tags": [
					"api/v1",
					"auth"
				]
			}
		},
		"/api/v1/auth/refresh": {
			"post": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*AuthHandler).RefreshToken`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/api/v1/auth/refresh",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshTokenRequest"
							}
						}
					},
					"description": "Request body for *app.RefreshTokenRequest",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TokenPair"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/TokenPair"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "refresh token",
				"tags": [
					"api/v1",
					"auth"
				]
			}
		},
		"/api/v1/projects": {
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).SearchProjects`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/projects",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Project"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Project"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "search projects",
				"tags": [
					"api/v1",
					"project"
				]
			},
			"post": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).CreateProject`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/api/v1/projects",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProjectToCreate"
							}
						}
					},
					"description": "Request body for *app.ProjectToCreate",
					"required": true
				},
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							}
						},
						"description": "Created"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "create project",
				"tags": [
					"api/v1",
					"project"
				]
			}
		},
		"/api/v1/projects/{id}": {
			"delete": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).DeleteProject`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "DELETE_/api/v1/projects/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "delete project",
				"tags": [
					"api/v1",
					"project"
				]
			},
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).GetProject`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/projects/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get project",
				"tags": [
					"api/v1",
					"project"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*ProjectHandler).UpdateProject`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "PUT_/api/v1/projects/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProjectToUpdate"
							}
						}
					},
					"description": "Request body for *app.ProjectToUpdate",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Project"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update project",
				"tags": [
					"api/v1",
					"project"
				]
			}
		},
		"/api/v1/tasks": {
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).SearchTasks`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/tasks",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Task"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "search tasks",
				"tags": [
					"api/v1",
					"task"
				]
			},
			"post": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).CreateTask`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/api/v1/tasks",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskToCreate"
							}
						}
					},
					"description": "Request body for *app.TaskToCreate",
					"required": true
				},
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						},
						"description": "Created"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "create task",
				"tags": [
					"api/v1",
					"task"
				]
			}
		},
		"/api/v1/tasks/{id}": {
			"delete": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).DeleteTask`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "DELETE_/api/v1/tasks/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "delete task",
				"tags": [
					"api/v1",
					"task"
				]
			},
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).GetTask`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/tasks/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get task",
				"tags": [
					"api/v1",
					"task"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*TaskHandler).UpdateTask`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "PUT_/api/v1/tasks/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskToUpdate"
							}
						}
					},
					"description": "Request body for *app.TaskToUpdate",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Task"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update task",
				"tags": [
					"api/v1",
					"task"
				]
			}
		},
		"/api/v1/users": {
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).SearchUsers`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/users",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "search users",
				"tags": [
					"api/v1",
					"user"
				]
			},
			"post": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).CreateUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/api/v1/users",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserToCreate"
							}
						}
					},
					"description": "Request body for *app.UserToCreate",
					"required": true
				},
				"responses": {
					"201": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "Created"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "create user",
				"tags": [
					"api/v1",
					"user"
				]
			}
		},
		"/api/v1/users/{id}": {
			"get": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).GetUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/api/v1/users/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get user",
				"tags": [
					"api/v1",
					"user"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/lighttiger2505/wakabata/internal/app.(*UserHandler).UpdateUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "PUT_/api/v1/users/:id",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"description": "Request body for *model.User",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update user",
				"tags": [
					"api/v1",
					"user"
				]
			}
		},
		"/health": {
			"get": {
				"description": "#### Controller: \n\n`main.main.func1`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/health",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/string"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/string"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "func1"
			}
		}
	},
	"servers": [
		{
			"description": "local server",
			"url": "http://0.0.0.0:8088"
		}
	],
	"tags": [
		{
			"name": "api/v1"
		},
		{
			"name": "auth"
		},
		{
			"name": "project"
		},
		{
			"name": "task"
		},
		{
			"name": "user"
		}
	]
}